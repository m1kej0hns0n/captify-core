{"version":3,"sources":["../src/types/auth.ts"],"sourcesContent":["import type { DefaultSession, Session } from \"next-auth\";\r\n\r\ndeclare module \"next-auth\" {\r\n  interface Session {\r\n    user: {\r\n      id?: string;\r\n      email?: string | null;\r\n      name?: string | null;\r\n      image?: string | null;\r\n      groups?: string[];\r\n      isAdmin?: boolean;\r\n    } & DefaultSession[\"user\"];\r\n    accessToken?: string;\r\n    idToken?: string;\r\n    refreshToken?: string;\r\n    awsTokenExpiresAt?: number;\r\n    groups?: string[];\r\n    isAdmin?: boolean;\r\n    captifyStatus?: string | null;\r\n    error?: string;\r\n  }\r\n\r\n  interface JWT {\r\n    sub?: string;\r\n    email?: string;\r\n    name?: string;\r\n    accessToken?: string;\r\n    idToken?: string;\r\n    refreshToken?: string;\r\n    awsTokenExpiresAt?: number;\r\n    accessTokenExpires?: number;\r\n    groups?: string[];\r\n    isAdmin?: boolean;\r\n    captifyStatus?: string | null;\r\n    error?: string;\r\n  }\r\n}\r\n\r\n/**\r\n * Helper to check if user has admin privileges\r\n */\r\nexport function isUserAdmin(session: Session | null): boolean {\r\n  if (!session) return false;\r\n  \r\n  // Check session-level isAdmin flag\r\n  if ((session as any).isAdmin) return true;\r\n  \r\n  // Check user-level isAdmin flag\r\n  if ((session.user as any)?.isAdmin) return true;\r\n  \r\n  // Check if user is in Admins group\r\n  if ((session as any).groups?.includes('Admins')) return true;\r\n  if ((session.user as any)?.groups?.includes('Admins')) return true;\r\n  \r\n  return false;\r\n}\r\n\r\n/**\r\n * Helper to get user's groups\r\n */\r\nexport function getUserGroups(session: Session | null): string[] {\r\n  if (!session) return [];\r\n  \r\n  // Prefer user-level groups\r\n  const userGroups = (session.user as any)?.groups;\r\n  if (userGroups && userGroups.length > 0) {\r\n    return userGroups;\r\n  }\r\n  \r\n  // Fall back to session-level groups\r\n  const sessionGroups = (session as any).groups;\r\n  if (sessionGroups && sessionGroups.length > 0) {\r\n    return sessionGroups;\r\n  }\r\n  \r\n  return [];\r\n}\r\n"],"mappings":";;;;AAyCO,SAAS,YAAY,SAAkC;AAC5D,MAAI,CAAC,QAAS,QAAO;AAGrB,MAAK,QAAgB,QAAS,QAAO;AAGrC,MAAK,QAAQ,MAAc,QAAS,QAAO;AAG3C,MAAK,QAAgB,QAAQ,SAAS,QAAQ,EAAG,QAAO;AACxD,MAAK,QAAQ,MAAc,QAAQ,SAAS,QAAQ,EAAG,QAAO;AAE9D,SAAO;AACT;AAdgB;AAmBT,SAAS,cAAc,SAAmC;AAC/D,MAAI,CAAC,QAAS,QAAO,CAAC;AAGtB,QAAM,aAAc,QAAQ,MAAc;AAC1C,MAAI,cAAc,WAAW,SAAS,GAAG;AACvC,WAAO;AAAA,EACT;AAGA,QAAM,gBAAiB,QAAgB;AACvC,MAAI,iBAAiB,cAAc,SAAS,GAAG;AAC7C,WAAO;AAAA,EACT;AAEA,SAAO,CAAC;AACV;AAhBgB;","names":[]}